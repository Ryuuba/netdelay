//
// Generated file, do not edit! Created by opp_msgtool 6.0 from tictocpkt.msg.
//

#ifndef __TICTOCPKT_M_H
#define __TICTOCPKT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TicTocPkt;
/**
 * Class generated from <tt>tictocpkt.msg:16</tt> by opp_msgtool.
 * <pre>
 * //
 * // Same as TictocMsg11
 * //
 * packet TicTocPkt
 * {
 *     int source;
 *     int destination;
 *     int hopCount = 0;
 *     double receptionTime = 0.0;
 * }
 * </pre>
 */
class TicTocPkt : public ::omnetpp::cPacket
{
  protected:
    int source = 0;
    int destination = 0;
    int hopCount = 0;
    double receptionTime = 0.0;

  private:
    void copy(const TicTocPkt& other);

  protected:
    bool operator==(const TicTocPkt&) = delete;

  public:
    TicTocPkt(const char *name=nullptr, short kind=0);
    TicTocPkt(const TicTocPkt& other);
    virtual ~TicTocPkt();
    TicTocPkt& operator=(const TicTocPkt& other);
    virtual TicTocPkt *dup() const override {return new TicTocPkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSource() const;
    virtual void setSource(int source);

    virtual int getDestination() const;
    virtual void setDestination(int destination);

    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);

    virtual double getReceptionTime() const;
    virtual void setReceptionTime(double receptionTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TicTocPkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TicTocPkt& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TicTocPkt *fromAnyPtr(any_ptr ptr) { return check_and_cast<TicTocPkt*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TICTOCPKT_M_H

